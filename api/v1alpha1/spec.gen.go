// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

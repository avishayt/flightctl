// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

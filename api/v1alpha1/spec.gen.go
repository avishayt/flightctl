// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

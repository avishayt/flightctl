// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/38DAAD//7e2aHJQCwIA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

{{ if .Values.alertmanagerProxy.enabled }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    flightctl.service: flightctl-alertmanager-proxy
  name: flightctl-alertmanager-proxy
  namespace: {{ default .Release.Namespace .Values.global.internalNamespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      flightctl.service: flightctl-alertmanager-proxy
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        flightctl.service: flightctl-alertmanager-proxy
    spec:
      containers:
        - name: alertmanager-proxy
          image: {{ .Values.alertmanagerProxy.image.image }}:{{ default .Chart.AppVersion .Values.alertmanagerProxy.image.tag }}
          imagePullPolicy: {{ default .Values.global.imagePullPolicy .Values.alertmanagerProxy.image.pullPolicy }}
          ports:
            - containerPort: 8443
              name: proxy
              protocol: TCP
          env:
            - name: HOME
              value: "/root"
          volumeMounts:
            - mountPath: /root/.flightctl
              name: flightctl-alertmanager-proxy-config
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: 8443
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8443
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5

      restartPolicy: Always
      volumes:
        - name: flightctl-alertmanager-proxy-config
          configMap:
            name: flightctl-api-config
{{ end }} 